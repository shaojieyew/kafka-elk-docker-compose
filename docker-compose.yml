version: '3'
services:
  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1
    container_name: elasticsearch1
    environment:
      - "discovery.type=single-node"
    volumes:
      - ./data:/usr/share/elasticsearch/data:rw
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - crawler-network
    restart: unless-stopped
  kibana-server:
    container_name: kibana-server
    depends_on:
      - elasticsearch1
    image: docker.elastic.co/kibana/kibana:7.6.1
    networks:
      - crawler-network
    ports:
      - "5601:5601"
    links:
      - elasticsearch1:elasticsearch
    restart: unless-stopped
  zookeeper-server:
    image: bitnami/zookeeper
    container_name: zookeeper-server
    environment:
      - "ALLOW_ANONYMOUS_LOGIN=yes"
    networks:
      - crawler-network
    ports:
      - "2181:2181"
    restart: unless-stopped
  kafka-server:
    depends_on:
      - zookeeper-server
    image: bitnami/kafka
    container_name: kafka-server
    environment:
      - "ALLOW_PLAINTEXT_LISTENER=yes"   
      - "KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181"
      - "KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      - "KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092"
      - "KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-server:9092,PLAINTEXT_HOST://localhost:29092"
    networks:
      - crawler-network
    ports:
      - "9092:9092"
      - "29092:29092"
    links:
      - zookeeper-server
    restart: unless-stopped
  crawler:
    depends_on:
      - kafka-server
      - elasticsearch1
    image: ysj/crawler:1.0
    container_name: crawler
    environment:
      - "CRAWLER_KAFKA_HOST=kafka-server:9092"   
      - "CRAWLER_ES_HOST=elasticsearch1:9200"
    networks:
      - crawler-network
    links:
      - kafka-server
      - elasticsearch1
    restart: unless-stopped
networks:
  crawler-network:
    driver: bridge
